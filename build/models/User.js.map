{"version":3,"sources":["../../src/models/User.js"],"names":["userSchema","Schema","firstName","String","lastName","email","type","unique","password","required","timestamps","versionKey","statics","encryptPassword","bcrypt","genSalt","generetedSalt","hash","validatePassword","comparePassword","compare"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,UAAU,GAAG,IAAIC,gBAAJ,CAAW;AAC1BC,EAAAA,SAAS,EAAEC,MADe;AAE1BC,EAAAA,QAAQ,EAAED,MAFgB;AAG1BE,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAEH,MADH;AAEHI,IAAAA,MAAM,EAAE;AAFL,GAHmB;AAO1BC,EAAAA,QAAQ,EAAE;AACNF,IAAAA,IAAI,EAAEH,MADA;AAENM,IAAAA,QAAQ,EAAE;AAFJ;AAPgB,CAAX,EAYf;AACIC,EAAAA,UAAU,EAAE,IADhB;AAEIC,EAAAA,UAAU,EAAE;AAFhB,CAZe,CAAnB;;AAiBAX,UAAU,CAACY,OAAX,CAAmBC,eAAnB;AAAA,2FAAqC,iBAAOL,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLM,qBAAOC,OAAP,CAAe,EAAf,CADK;;AAAA;AAC3BC,YAAAA,aAD2B;AAAA;AAAA,mBAEpBF,qBAAOG,IAAP,CAAYT,QAAZ,EAAsBQ,aAAtB,CAFoB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAKAhB,UAAU,CAACY,OAAX,CAAmBM,gBAAnB;AAAA,4FAAsC,kBAAOV,QAAP,EAAiBW,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACrBL,qBAAOM,OAAP,CAAeZ,QAAf,EAAyBW,eAAzB,CADqB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;eAMe,qBAAM,MAAN,EAAcnB,UAAd,C","sourcesContent":["import { Schema, model } from 'mongoose'\nimport bcrypt from 'bcryptjs'\n\nconst userSchema = new Schema({\n    firstName: String,\n    lastName: String,    \n    email: {\n        type: String,\n        unique: true\n    },\n    password: {\n        type: String,\n        required: true\n    }\n},\n    {\n        timestamps: true,\n        versionKey: false\n    });\n\nuserSchema.statics.encryptPassword = async (password) => {\n    const generetedSalt = await bcrypt.genSalt(10)\n    return await bcrypt.hash(password, generetedSalt)\n}\n\nuserSchema.statics.validatePassword = async (password, comparePassword) => {\n    return await bcrypt.compare(password, comparePassword)\n}\n\n\n\nexport default model('User', userSchema)"],"file":"User.js"}