{"version":3,"sources":["../../src/controllers/products.controller.js"],"names":["getAllProducts","req","res","Product","find","listOfProducts","status","json","getProductById","findById","params","productId","findedProduct","getProductByCategory","category","findedProducts","createProduct","body","name","price","brand","stock","imgUrl","save","createdProduct","updateProduct","findByIdAndUpdate","updatedProduct","deleteProduct","findByIdAndDelete","getCategories","distinct","categories"],"mappings":"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","sourcesContent":["import Product from '../models/Product'\n\nexport const getAllProducts = async (req, res) => {\n    const listOfProducts = await Product.find()\n    res.status(200).json(listOfProducts)\n}\n\nexport const getProductById = async (req, res) => {\n    const findedProduct = await Product.findById(req.params.productId)\n    res.json(findedProduct)\n}\n\nexport const getProductByCategory = async (req, res) => {\n    const findedProducts = await Product.find({ 'category': req.params.category })\n    res.json(findedProducts)\n}\n\nexport const createProduct = async (req, res) => {\n    const { name, price, category, brand, stock, imgUrl } = req.body\n    const createdProduct = await new Product({\n        name,\n        price,\n        category,\n        brand,\n        stock,\n        imgUrl\n    }).save()\n\n    res.status(201).json(createdProduct)\n}\n\nexport const updateProduct = async (req, res) => {\n    const updatedProduct = await Product.findByIdAndUpdate(req.params.productId, req.body, {\n        new: true\n    })\n    res.status(200).json(updatedProduct)\n}\n\nexport const deleteProduct = async (req, res) => {\n    await Product.findByIdAndDelete(req.params.productId)\n    res.status(204).json('product deleted')\n}\n\nexport const getCategories = async (req, res) => {\n    const categories = await Product.distinct('category')\n    res.status(200).json(categories)\n}"],"file":"products.controller.js"}